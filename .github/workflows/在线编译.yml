#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: 云端编译OpenWrt

on: 
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: 校验本地文件
      uses: actions/checkout@master
      with:
        ref: master

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 克隆编译的源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更新并安装软件列表
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 生成配置文件
      run: |
        cd openwrt
        rm -f ./.config*
        touch ./.config

        # 编译x64固件:
        cat >> .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_Generic=y
        EOF
        
        # 设置固件大小:
        cat >> .config <<EOF
        CONFIG_TARGET_KERNEL_PARTSIZE=30
        CONFIG_TARGET_ROOTFS_PARTSIZE=400
        EOF
        # 固件压缩:
        cat >> .config <<EOF
        CONFIG_TARGET_IMAGES_GZIP=y
        EOF
        # IPv6支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF
        # USB3.0支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb-ohci-pci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb2-pci=y
        CONFIG_PACKAGE_kmod-usb3=y
        EOF
        # 多文件系统支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_kmod-fs-nfs=y
        CONFIG_PACKAGE_kmod-fs-nfs-common=y
        CONFIG_PACKAGE_kmod-fs-nfs-v3=y
        CONFIG_PACKAGE_kmod-fs-nfs-v4=y
        CONFIG_PACKAGE_kmod-fs-ntfs=y
        CONFIG_PACKAGE_kmod-fs-squashfs=y
        EOF
        # LuCI插件选择:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-app-aria2=y
        CONFIG_PACKAGE_luci-app-docker=y
        CONFIG_PACKAGE_luci-app-kodexplorer=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
        CONFIG_PACKAGE_luci-app-uhttpd=y
        CONFIG_PACKAGE_luci-app-serverchan=y
        CONFIG_PACKAGE_luci-app-v2ray-server=y
        CONFIG_PACKAGE_luci-app-koolproxyR=y
        CONFIG_PACKAGE_luci-app-xlnetacc=y
        CONFIG_PACKAGE_luci-app-sqm=y
        CONFIG_PACKAGE_luci-app-softethervpn=y
        CONFIG_PACKAGE_luci-app-baidupcs-web=y
        CONFIG_PACKAGE_luci-app-frpc=y
        CONFIG_PACKAGE_luci-app-minidlna=y
        CONFIG_PACKAGE_luci-app-smartinfo=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-lxc=y
        CONFIG_PACKAGE_luci-app-statistics=y
        CONFIG_PACKAGE_luci-app-zerotier=y
        CONFIG_PACKAGE_luci-app-aliddns=y
        CONFIG_PACKAGE_luci-app-qbittorrent=y
        EOF
        # LuCI主题:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_luci-theme-rosy=y
        CONFIG_PACKAGE_luci-theme-atmaterial=y
        EOF
        # 常用软件包:
        cat >> .config <<EOF
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_wget=y
        CONFIG_PACKAGE_diffutils=y
        EOF
        
        # 其他需要安装的软件包:
        cat >> .config <<EOF
        CONFIG_PACKAGE_iptables-mod-nat-extra=y
        CONFIG_PACKAGE_drill=y
        CONFIG_PACKAGE_luci-i18n-uhttpd-zh-cn=y
        CONFIG_PACKAGE_luci-ssl-openssl=y
        EOF
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig

    - name: 下载包
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 整理固件
      run: |
          cd openwrt
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/

    - name: 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrtFirmware
        path: ./openwrt/artifact/
